Index.PACKAGES = {"org.apache.spark.sql.catalyst.types" : [{"case class" : "org\/apache\/spark\/sql\/catalyst\/types\/ArrayType.html", "object" : "org\/apache\/spark\/sql\/catalyst\/types\/ArrayType$.html", "name" : "org.apache.spark.sql.catalyst.types.ArrayType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/BinaryType$.html", "name" : "org.apache.spark.sql.catalyst.types.BinaryType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/BooleanType$.html", "name" : "org.apache.spark.sql.catalyst.types.BooleanType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/ByteType$.html", "name" : "org.apache.spark.sql.catalyst.types.ByteType"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/types\/DataType.html", "object" : "org\/apache\/spark\/sql\/catalyst\/types\/DataType$.html", "name" : "org.apache.spark.sql.catalyst.types.DataType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/DecimalType$.html", "name" : "org.apache.spark.sql.catalyst.types.DecimalType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/DoubleType$.html", "name" : "org.apache.spark.sql.catalyst.types.DoubleType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/FloatType$.html", "name" : "org.apache.spark.sql.catalyst.types.FloatType"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/types\/FractionalType.html", "object" : "org\/apache\/spark\/sql\/catalyst\/types\/FractionalType$.html", "name" : "org.apache.spark.sql.catalyst.types.FractionalType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/IntegerType$.html", "name" : "org.apache.spark.sql.catalyst.types.IntegerType"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/types\/IntegralType.html", "object" : "org\/apache\/spark\/sql\/catalyst\/types\/IntegralType$.html", "name" : "org.apache.spark.sql.catalyst.types.IntegralType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/LongType$.html", "name" : "org.apache.spark.sql.catalyst.types.LongType"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/types\/MapType.html", "object" : "org\/apache\/spark\/sql\/catalyst\/types\/MapType$.html", "name" : "org.apache.spark.sql.catalyst.types.MapType"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/types\/NativeType.html", "object" : "org\/apache\/spark\/sql\/catalyst\/types\/NativeType$.html", "name" : "org.apache.spark.sql.catalyst.types.NativeType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/NullType$.html", "name" : "org.apache.spark.sql.catalyst.types.NullType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/NumericType$.html", "class" : "org\/apache\/spark\/sql\/catalyst\/types\/NumericType.html", "name" : "org.apache.spark.sql.catalyst.types.NumericType"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/types\/PrimitiveType.html", "name" : "org.apache.spark.sql.catalyst.types.PrimitiveType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/ShortType$.html", "name" : "org.apache.spark.sql.catalyst.types.ShortType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/StringType$.html", "name" : "org.apache.spark.sql.catalyst.types.StringType"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/types\/StructField.html", "name" : "org.apache.spark.sql.catalyst.types.StructField"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/types\/StructType.html", "object" : "org\/apache\/spark\/sql\/catalyst\/types\/StructType$.html", "name" : "org.apache.spark.sql.catalyst.types.StructType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/types\/TimestampType$.html", "name" : "org.apache.spark.sql.catalyst.types.TimestampType"}], "org.apache.spark.sql.catalyst.errors" : [{"class" : "org\/apache\/spark\/sql\/catalyst\/errors\/package$$TreeNodeException.html", "name" : "org.apache.spark.sql.catalyst.errors.TreeNodeException"}], "scala.tools.nsc.interpreter" : [], "org.apache.spark.sql.catalyst.plans.physical" : [{"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/AllTuples$.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.AllTuples"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/BroadcastPartitioning$.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.BroadcastPartitioning"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/ClusteredDistribution.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.ClusteredDistribution"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/Distribution.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.Distribution"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/HashPartitioning.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.HashPartitioning"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/OrderedDistribution.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.OrderedDistribution"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/Partitioning.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.Partitioning"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/RangePartitioning.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.RangePartitioning"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/SinglePartition$.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.SinglePartition"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/UnknownPartitioning.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.UnknownPartitioning"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/physical\/UnspecifiedDistribution$.html", "name" : "org.apache.spark.sql.catalyst.plans.physical.UnspecifiedDistribution"}], "org.apache.spark.sql.catalyst.expressions.codegen" : [{"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/codegen\/CodeGenerator.html", "name" : "org.apache.spark.sql.catalyst.expressions.codegen.CodeGenerator"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/codegen\/package$$DumpByteCode$.html", "name" : "org.apache.spark.sql.catalyst.expressions.codegen.DumpByteCode"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/codegen\/package$$ExpressionCanonicalizer$.html", "name" : "org.apache.spark.sql.catalyst.expressions.codegen.ExpressionCanonicalizer"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/codegen\/GenerateMutableProjection$.html", "name" : "org.apache.spark.sql.catalyst.expressions.codegen.GenerateMutableProjection"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/codegen\/GenerateOrdering$.html", "name" : "org.apache.spark.sql.catalyst.expressions.codegen.GenerateOrdering"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/codegen\/GeneratePredicate$.html", "name" : "org.apache.spark.sql.catalyst.expressions.codegen.GeneratePredicate"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/codegen\/GenerateProjection$.html", "name" : "org.apache.spark.sql.catalyst.expressions.codegen.GenerateProjection"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/codegen\/IntegerHashSet.html", "name" : "org.apache.spark.sql.catalyst.expressions.codegen.IntegerHashSet"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/codegen\/LongHashSet.html", "name" : "org.apache.spark.sql.catalyst.expressions.codegen.LongHashSet"}], "org.apache.spark.sql.catalyst.plans" : [{"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/FullOuter$.html", "name" : "org.apache.spark.sql.catalyst.plans.FullOuter"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/Inner$.html", "name" : "org.apache.spark.sql.catalyst.plans.Inner"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/plans\/JoinType.html", "name" : "org.apache.spark.sql.catalyst.plans.JoinType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/LeftOuter$.html", "name" : "org.apache.spark.sql.catalyst.plans.LeftOuter"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/LeftSemi$.html", "name" : "org.apache.spark.sql.catalyst.plans.LeftSemi"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/plans\/QueryPlan.html", "name" : "org.apache.spark.sql.catalyst.plans.QueryPlan"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/RightOuter$.html", "name" : "org.apache.spark.sql.catalyst.plans.RightOuter"}], "org.apache.spark" : [], "org.apache" : [], "org.apache.spark.sql.catalyst.optimizer" : [{"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/BooleanSimplification$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.BooleanSimplification"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/ColumnPruning$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.ColumnPruning"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/CombineFilters$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.CombineFilters"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/CombineLimits$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.CombineLimits"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/ConstantFolding$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.ConstantFolding"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/LikeSimplification$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.LikeSimplification"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/NullPropagation$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.NullPropagation"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/Optimizer$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.Optimizer"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/PushPredicateThroughJoin$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.PushPredicateThroughJoin"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/PushPredicateThroughProject$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.PushPredicateThroughProject"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/SimplifyCaseConversionExpressions$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.SimplifyCaseConversionExpressions"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/SimplifyCasts$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.SimplifyCasts"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/optimizer\/SimplifyFilters$.html", "name" : "org.apache.spark.sql.catalyst.optimizer.SimplifyFilters"}], "org.apache.spark.sql.catalyst.analysis" : [{"class" : "org\/apache\/spark\/sql\/catalyst\/analysis\/Analyzer.html", "name" : "org.apache.spark.sql.catalyst.analysis.Analyzer"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/analysis\/Catalog.html", "name" : "org.apache.spark.sql.catalyst.analysis.Catalog"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/analysis\/EliminateAnalysisOperators$.html", "name" : "org.apache.spark.sql.catalyst.analysis.EliminateAnalysisOperators"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/analysis\/EmptyCatalog$.html", "name" : "org.apache.spark.sql.catalyst.analysis.EmptyCatalog"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/analysis\/EmptyFunctionRegistry$.html", "name" : "org.apache.spark.sql.catalyst.analysis.EmptyFunctionRegistry"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/analysis\/FunctionRegistry.html", "name" : "org.apache.spark.sql.catalyst.analysis.FunctionRegistry"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/analysis\/HiveTypeCoercion.html", "object" : "org\/apache\/spark\/sql\/catalyst\/analysis\/HiveTypeCoercion$.html", "name" : "org.apache.spark.sql.catalyst.analysis.HiveTypeCoercion"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/analysis\/MultiInstanceRelation.html", "name" : "org.apache.spark.sql.catalyst.analysis.MultiInstanceRelation"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/analysis\/NewRelationInstances$.html", "name" : "org.apache.spark.sql.catalyst.analysis.NewRelationInstances"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/analysis\/OverrideCatalog.html", "name" : "org.apache.spark.sql.catalyst.analysis.OverrideCatalog"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/analysis\/OverrideFunctionRegistry.html", "name" : "org.apache.spark.sql.catalyst.analysis.OverrideFunctionRegistry"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/analysis\/SimpleAnalyzer$.html", "name" : "org.apache.spark.sql.catalyst.analysis.SimpleAnalyzer"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/analysis\/SimpleCatalog.html", "name" : "org.apache.spark.sql.catalyst.analysis.SimpleCatalog"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/analysis\/SimpleFunctionRegistry.html", "name" : "org.apache.spark.sql.catalyst.analysis.SimpleFunctionRegistry"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/analysis\/Star.html", "name" : "org.apache.spark.sql.catalyst.analysis.Star"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/analysis\/UnresolvedAttribute.html", "name" : "org.apache.spark.sql.catalyst.analysis.UnresolvedAttribute"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/analysis\/UnresolvedException.html", "name" : "org.apache.spark.sql.catalyst.analysis.UnresolvedException"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/analysis\/UnresolvedFunction.html", "name" : "org.apache.spark.sql.catalyst.analysis.UnresolvedFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/analysis\/UnresolvedRelation.html", "name" : "org.apache.spark.sql.catalyst.analysis.UnresolvedRelation"}], "org.apache.spark.sql.catalyst.planning" : [{"object" : "org\/apache\/spark\/sql\/catalyst\/planning\/ExtractEquiJoinKeys$.html", "name" : "org.apache.spark.sql.catalyst.planning.ExtractEquiJoinKeys"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/planning\/FilteredOperation$.html", "name" : "org.apache.spark.sql.catalyst.planning.FilteredOperation"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/planning\/PartialAggregation$.html", "name" : "org.apache.spark.sql.catalyst.planning.PartialAggregation"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/planning\/PhysicalOperation$.html", "name" : "org.apache.spark.sql.catalyst.planning.PhysicalOperation"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/planning\/QueryPlanner.html", "name" : "org.apache.spark.sql.catalyst.planning.QueryPlanner"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/planning\/Unions$.html", "name" : "org.apache.spark.sql.catalyst.planning.Unions"}], "org.apache.spark.sql.catalyst" : [{"object" : "org\/apache\/spark\/sql\/catalyst\/ScalaReflection$.html", "name" : "org.apache.spark.sql.catalyst.ScalaReflection"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/package$$ScalaReflectionLock$.html", "name" : "org.apache.spark.sql.catalyst.ScalaReflectionLock"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/SqlLexical.html", "name" : "org.apache.spark.sql.catalyst.SqlLexical"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/SqlParser.html", "name" : "org.apache.spark.sql.catalyst.SqlParser"}], "org.apache.spark.sql.catalyst.expressions" : [{"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Add.html", "name" : "org.apache.spark.sql.catalyst.expressions.Add"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/AddItemToSet.html", "name" : "org.apache.spark.sql.catalyst.expressions.AddItemToSet"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/AggregateExpression.html", "name" : "org.apache.spark.sql.catalyst.expressions.AggregateExpression"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/AggregateFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.AggregateFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Alias.html", "name" : "org.apache.spark.sql.catalyst.expressions.Alias"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/And.html", "name" : "org.apache.spark.sql.catalyst.expressions.And"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/ApproxCountDistinct.html", "name" : "org.apache.spark.sql.catalyst.expressions.ApproxCountDistinct"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/ApproxCountDistinctMerge.html", "name" : "org.apache.spark.sql.catalyst.expressions.ApproxCountDistinctMerge"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/ApproxCountDistinctMergeFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.ApproxCountDistinctMergeFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/ApproxCountDistinctPartition.html", "name" : "org.apache.spark.sql.catalyst.expressions.ApproxCountDistinctPartition"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/ApproxCountDistinctPartitionFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.ApproxCountDistinctPartitionFunction"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Ascending$.html", "name" : "org.apache.spark.sql.catalyst.expressions.Ascending"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Attribute.html", "name" : "org.apache.spark.sql.catalyst.expressions.Attribute"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/AttributeEquals.html", "name" : "org.apache.spark.sql.catalyst.expressions.AttributeEquals"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/AttributeReference.html", "name" : "org.apache.spark.sql.catalyst.expressions.AttributeReference"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/AttributeSet.html", "object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/AttributeSet$.html", "name" : "org.apache.spark.sql.catalyst.expressions.AttributeSet"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Average.html", "name" : "org.apache.spark.sql.catalyst.expressions.Average"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/AverageFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.AverageFunction"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/BinaryArithmetic.html", "name" : "org.apache.spark.sql.catalyst.expressions.BinaryArithmetic"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/BinaryComparison.html", "name" : "org.apache.spark.sql.catalyst.expressions.BinaryComparison"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/BinaryExpression.html", "name" : "org.apache.spark.sql.catalyst.expressions.BinaryExpression"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/BinaryPredicate.html", "name" : "org.apache.spark.sql.catalyst.expressions.BinaryPredicate"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/BindReferences$.html", "name" : "org.apache.spark.sql.catalyst.expressions.BindReferences"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/BoundReference.html", "name" : "org.apache.spark.sql.catalyst.expressions.BoundReference"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CaseConversionExpression.html", "name" : "org.apache.spark.sql.catalyst.expressions.CaseConversionExpression"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CaseWhen.html", "name" : "org.apache.spark.sql.catalyst.expressions.CaseWhen"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Cast$.html", "case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Cast.html", "name" : "org.apache.spark.sql.catalyst.expressions.Cast"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Coalesce.html", "name" : "org.apache.spark.sql.catalyst.expressions.Coalesce"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CollectHashSet.html", "name" : "org.apache.spark.sql.catalyst.expressions.CollectHashSet"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CollectHashSetFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.CollectHashSetFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CombineSets.html", "name" : "org.apache.spark.sql.catalyst.expressions.CombineSets"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CombineSetsAndCount.html", "name" : "org.apache.spark.sql.catalyst.expressions.CombineSetsAndCount"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CombineSetsAndCountFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.CombineSetsAndCountFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Contains.html", "name" : "org.apache.spark.sql.catalyst.expressions.Contains"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Count.html", "name" : "org.apache.spark.sql.catalyst.expressions.Count"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CountDistinct.html", "name" : "org.apache.spark.sql.catalyst.expressions.CountDistinct"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CountDistinctFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.CountDistinctFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CountFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.CountFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/CountSet.html", "name" : "org.apache.spark.sql.catalyst.expressions.CountSet"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Descending$.html", "name" : "org.apache.spark.sql.catalyst.expressions.Descending"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Divide.html", "name" : "org.apache.spark.sql.catalyst.expressions.Divide"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/DynamicRow.html", "name" : "org.apache.spark.sql.catalyst.expressions.DynamicRow"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/DynamicType$.html", "name" : "org.apache.spark.sql.catalyst.expressions.DynamicType"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/EmptyRow$.html", "name" : "org.apache.spark.sql.catalyst.expressions.EmptyRow"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/EndsWith.html", "name" : "org.apache.spark.sql.catalyst.expressions.EndsWith"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/EqualNullSafe.html", "name" : "org.apache.spark.sql.catalyst.expressions.EqualNullSafe"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/EqualTo.html", "name" : "org.apache.spark.sql.catalyst.expressions.EqualTo"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Explode.html", "name" : "org.apache.spark.sql.catalyst.expressions.Explode"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Expression.html", "name" : "org.apache.spark.sql.catalyst.expressions.Expression"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/ExprId.html", "name" : "org.apache.spark.sql.catalyst.expressions.ExprId"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/First.html", "name" : "org.apache.spark.sql.catalyst.expressions.First"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/FirstFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.FirstFunction"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Generator.html", "name" : "org.apache.spark.sql.catalyst.expressions.Generator"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/GenericMutableRow.html", "name" : "org.apache.spark.sql.catalyst.expressions.GenericMutableRow"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/GenericRow.html", "name" : "org.apache.spark.sql.catalyst.expressions.GenericRow"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/GetField.html", "name" : "org.apache.spark.sql.catalyst.expressions.GetField"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/GetItem.html", "name" : "org.apache.spark.sql.catalyst.expressions.GetItem"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/GreaterThan.html", "name" : "org.apache.spark.sql.catalyst.expressions.GreaterThan"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/GreaterThanOrEqual.html", "name" : "org.apache.spark.sql.catalyst.expressions.GreaterThanOrEqual"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/If.html", "name" : "org.apache.spark.sql.catalyst.expressions.If"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/In.html", "name" : "org.apache.spark.sql.catalyst.expressions.In"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/IntegerLiteral$.html", "name" : "org.apache.spark.sql.catalyst.expressions.IntegerLiteral"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/InterpretedMutableProjection.html", "name" : "org.apache.spark.sql.catalyst.expressions.InterpretedMutableProjection"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/InterpretedPredicate$.html", "name" : "org.apache.spark.sql.catalyst.expressions.InterpretedPredicate"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/InterpretedProjection.html", "name" : "org.apache.spark.sql.catalyst.expressions.InterpretedProjection"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/IsNotNull.html", "name" : "org.apache.spark.sql.catalyst.expressions.IsNotNull"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/IsNull.html", "name" : "org.apache.spark.sql.catalyst.expressions.IsNull"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/JoinedRow.html", "name" : "org.apache.spark.sql.catalyst.expressions.JoinedRow"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/JoinedRow2.html", "name" : "org.apache.spark.sql.catalyst.expressions.JoinedRow2"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/JoinedRow3.html", "name" : "org.apache.spark.sql.catalyst.expressions.JoinedRow3"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/JoinedRow4.html", "name" : "org.apache.spark.sql.catalyst.expressions.JoinedRow4"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/JoinedRow5.html", "name" : "org.apache.spark.sql.catalyst.expressions.JoinedRow5"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/LeafExpression.html", "name" : "org.apache.spark.sql.catalyst.expressions.LeafExpression"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/LessThan.html", "name" : "org.apache.spark.sql.catalyst.expressions.LessThan"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/LessThanOrEqual.html", "name" : "org.apache.spark.sql.catalyst.expressions.LessThanOrEqual"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Like.html", "name" : "org.apache.spark.sql.catalyst.expressions.Like"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Literal.html", "object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Literal$.html", "name" : "org.apache.spark.sql.catalyst.expressions.Literal"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Lower.html", "name" : "org.apache.spark.sql.catalyst.expressions.Lower"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Max.html", "name" : "org.apache.spark.sql.catalyst.expressions.Max"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MaxFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.MaxFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MaxOf.html", "name" : "org.apache.spark.sql.catalyst.expressions.MaxOf"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Min.html", "name" : "org.apache.spark.sql.catalyst.expressions.Min"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MinFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.MinFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Multiply.html", "name" : "org.apache.spark.sql.catalyst.expressions.Multiply"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableAny.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableAny"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableBoolean.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableBoolean"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableByte.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableByte"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableDouble.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableDouble"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableFloat.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableFloat"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableInt.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableInt"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableLiteral.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableLiteral"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableLong.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableLong"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/package$$MutableProjection.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableProjection"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableRow.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableRow"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableShort.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableShort"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/MutableValue.html", "name" : "org.apache.spark.sql.catalyst.expressions.MutableValue"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/NamedExpression.html", "object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/NamedExpression$.html", "name" : "org.apache.spark.sql.catalyst.expressions.NamedExpression"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/NewSet.html", "name" : "org.apache.spark.sql.catalyst.expressions.NewSet"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Not.html", "name" : "org.apache.spark.sql.catalyst.expressions.Not"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Or.html", "name" : "org.apache.spark.sql.catalyst.expressions.Or"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/PartialAggregate.html", "name" : "org.apache.spark.sql.catalyst.expressions.PartialAggregate"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Predicate.html", "name" : "org.apache.spark.sql.catalyst.expressions.Predicate"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/expressions\/PredicateHelper.html", "name" : "org.apache.spark.sql.catalyst.expressions.PredicateHelper"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/package$$Projection.html", "name" : "org.apache.spark.sql.catalyst.expressions.Projection"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Rand$.html", "name" : "org.apache.spark.sql.catalyst.expressions.Rand"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Remainder.html", "name" : "org.apache.spark.sql.catalyst.expressions.Remainder"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/RLike.html", "name" : "org.apache.spark.sql.catalyst.expressions.RLike"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Row.html", "object" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Row$.html", "name" : "org.apache.spark.sql.catalyst.expressions.Row"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/RowOrdering.html", "name" : "org.apache.spark.sql.catalyst.expressions.RowOrdering"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/ScalaUdf.html", "name" : "org.apache.spark.sql.catalyst.expressions.ScalaUdf"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/SortDirection.html", "name" : "org.apache.spark.sql.catalyst.expressions.SortDirection"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/SortOrder.html", "name" : "org.apache.spark.sql.catalyst.expressions.SortOrder"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/SpecificMutableRow.html", "name" : "org.apache.spark.sql.catalyst.expressions.SpecificMutableRow"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/SplitEvaluation.html", "name" : "org.apache.spark.sql.catalyst.expressions.SplitEvaluation"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/StartsWith.html", "name" : "org.apache.spark.sql.catalyst.expressions.StartsWith"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/expressions\/StringComparison.html", "name" : "org.apache.spark.sql.catalyst.expressions.StringComparison"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/expressions\/StringRegexExpression.html", "name" : "org.apache.spark.sql.catalyst.expressions.StringRegexExpression"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Substring.html", "name" : "org.apache.spark.sql.catalyst.expressions.Substring"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Subtract.html", "name" : "org.apache.spark.sql.catalyst.expressions.Subtract"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Sum.html", "name" : "org.apache.spark.sql.catalyst.expressions.Sum"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/SumDistinct.html", "name" : "org.apache.spark.sql.catalyst.expressions.SumDistinct"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/SumDistinctFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.SumDistinctFunction"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/SumFunction.html", "name" : "org.apache.spark.sql.catalyst.expressions.SumFunction"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/UnaryExpression.html", "name" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/UnaryMinus.html", "name" : "org.apache.spark.sql.catalyst.expressions.UnaryMinus"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/Upper.html", "name" : "org.apache.spark.sql.catalyst.expressions.Upper"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/expressions\/WrapDynamic.html", "name" : "org.apache.spark.sql.catalyst.expressions.WrapDynamic"}], "scala" : [], "org.apache.spark.sql.catalyst.rules" : [{"class" : "org\/apache\/spark\/sql\/catalyst\/rules\/Rule.html", "name" : "org.apache.spark.sql.catalyst.rules.Rule"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/rules\/RuleExecutor.html", "name" : "org.apache.spark.sql.catalyst.rules.RuleExecutor"}], "scala.tools.nsc" : [], "org.apache.spark.sql" : [], "org.apache.spark.sql.catalyst.trees" : [{"trait" : "org\/apache\/spark\/sql\/catalyst\/trees\/BinaryNode.html", "name" : "org.apache.spark.sql.catalyst.trees.BinaryNode"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/trees\/LeafNode.html", "name" : "org.apache.spark.sql.catalyst.trees.LeafNode"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/trees\/TreeNode.html", "object" : "org\/apache\/spark\/sql\/catalyst\/trees\/TreeNode$.html", "name" : "org.apache.spark.sql.catalyst.trees.TreeNode"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/trees\/UnaryNode.html", "name" : "org.apache.spark.sql.catalyst.trees.UnaryNode"}], "org" : [], "org.apache.spark.sql.catalyst.plans.logical" : [{"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Aggregate.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Aggregate"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/BinaryNode.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.BinaryNode"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/CacheCommand.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.CacheCommand"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Command.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Command"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/DescribeCommand.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.DescribeCommand"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Distinct.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Distinct"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Except.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Except"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/ExplainCommand.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.ExplainCommand"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Filter.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Filter"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Generate.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Generate"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/InsertIntoCreatedTable.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.InsertIntoCreatedTable"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/InsertIntoTable.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.InsertIntoTable"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Intersect.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Intersect"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Join.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Join"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/LeafNode.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.LeafNode"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Limit.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Limit"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/LocalRelation.html", "object" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/LocalRelation$.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.LocalRelation"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/LogicalPlan.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.LogicalPlan"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/LowerCaseSchema.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.LowerCaseSchema"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/NativeCommand.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.NativeCommand"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/NoRelation$.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.NoRelation"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Project.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Project"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/RedistributeData.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.RedistributeData"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Repartition.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Repartition"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Sample.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Sample"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/ScriptTransformation.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.ScriptTransformation"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/SetCommand.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.SetCommand"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Sort.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Sort"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/SortPartitions.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.SortPartitions"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Subquery.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Subquery"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/UnaryNode.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.UnaryNode"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/Union.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.Union"}, {"case class" : "org\/apache\/spark\/sql\/catalyst\/plans\/logical\/WriteToFile.html", "name" : "org.apache.spark.sql.catalyst.plans.logical.WriteToFile"}], "scala.tools" : [], "org.apache.spark.sql.catalyst.dsl" : [{"trait" : "org\/apache\/spark\/sql\/catalyst\/dsl\/package$$ExpressionConversions.html", "name" : "org.apache.spark.sql.catalyst.dsl.ExpressionConversions"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/dsl\/package$$expressions$.html", "name" : "org.apache.spark.sql.catalyst.dsl.expressions"}, {"trait" : "org\/apache\/spark\/sql\/catalyst\/dsl\/package$$ImplicitOperators.html", "name" : "org.apache.spark.sql.catalyst.dsl.ImplicitOperators"}, {"class" : "org\/apache\/spark\/sql\/catalyst\/dsl\/package$$LogicalPlanFunctions.html", "name" : "org.apache.spark.sql.catalyst.dsl.LogicalPlanFunctions"}, {"object" : "org\/apache\/spark\/sql\/catalyst\/dsl\/package$$plans$.html", "name" : "org.apache.spark.sql.catalyst.dsl.plans"}]};