editor.name=PSpec Editor
file=File
add=Add
add.child=Add Child
delete=Delete
new=New
open=Open
open.vocabulary=Open Vocabulary
open.policy=Open Policy
new.vocabulary=New Vocabulary
new.policy=New Policy
save=Save
save.as=Save As...
save.vocabulary=Save Vocabulary {0}
save.policy=Save Policy {0}
exit=Exit
edit=Edit
visualize=Visualize
help=Help
close=Close
about=About
goto=Goto
fix=Fix
ok=OK
clear=Clear
warning=Warning
error=Error
location=Location
description=Description
type=Type
cancel=Cancel
analysis=Analysis
simplify=Simplify
consistency=Consistency
redundancy=Redundancy
normal.consistency=Normal Consistency
approximate.consistency=Approximate Consistency
strong.consistency=Strong Consistency
enhanced.strong.consistency=Enhanced Strong Consistency
select.as.seed=Select As Seed

confirm.close=Confirm Close?
confirm.close.message=Save document before close?
confirm.exit=Confirm Exit?
confirm.exit.message=Save all editing vocabularies and policies before exit?

base.vocabulary=Base Vocabulary
base.vocabulary.contains.error.message=Base Vocabulary "{0}" contains errors, please fix them first.
basic.info=Basic Information
vocabulary=Vocabulary
vocabulary.output=Vocabulary: {0}
vocabulary.ref=Vocabulary Reference
vocabulary.info=Vocabulary Information
vocabulary.id=Vocabulary ID
vocabulary.location=Vocabulary Location
vocabulary.id.empty.message=Vocabualry ID cannot be empty.
vocabulary.opened.message=Vocabulary "{0}" is already opened.
vocabulary.save.success.message=Vocabulary {0} is successfully save to "{1}".
vocabulary.cycle.reference.message=Vocabulary references cannot be a cycle.
vocabulary.invalid.document.message="{0}" is not a valid vocabulary document!
vocabulary.parse.error.message=Vocabulary "{0}" contains errors, see messages from output.
vocabulary.save.error.message=Vocabulary {0} contains errors, please fix them before save.

issuer=Issuer
issuer.name=Issuer Name
issuer.organization=Issuer Organization
issuer.email=Issuer Email
issuer.address=Issuer Address
issuer.country=Issuer Country
short.description=Short Description
long.description=Long Description
base.id=Base ID

user.ref=User Reference
user.container=User Container
user.container.id=User Container ID
user.category=User Category
user.category.id=User Category ID
user.category.parent.id=Parent ID
user.container.id.not.empty.message=User Container ID cannot be empty.
user.category.duplicate.message=User Category {0} duplicates.
user.category.id.not.empty.message=User Category ID cannot be empty.
user.category.id.unique.message=User Category {0} already exists.
user.category.parent.same.message=Parent of user category cannot be set as itself.
user.category.parent.cycle.message=User Category reference of {0} cannot be a cycle.
user.category.parent.not.exist.message=Parent User Category {1} of User Category {0} does not exist.
user.category.exclude.unique.message=User Category {0} is already excluded.
user.category.not.excluded.message=User Category {0} is not excluded yet.
user.category.exclude.not.exist.message=Excluded User Category {1} of User Category {0} does not exist.
user.category.exclude.invalid.message=Excluded User Category {1} is not a valid descendant of User Category {0} and is ignored.
user.category.not.exist.message=User Category {0} referred in Rule {1} does not exist.

data.ref=Data Reference
data.association=Data Association
data.container=Data Container
data.container.id=Data Container ID
data.category=Data Category
data.category.id=Data Category ID
data.category.parent.id=Parent ID
data.category.duplicate.message=Data Category {0} duplicates.
data.container.id.not.empty.message=Data Container ID cannot be empty.
data.category.id.not.empty.message=Data Category ID cannot be empty.
data.category.id.unique.message=Data Category {0} already exists.
data.category.parent.same.message=Parent of data category cannot be set as itself.
data.category.parent.cycle.message=Data Category reference of {0} cannot be a cycle.
data.category.exclude.unique.message=Data Category {0} is already excluded.
data.category.not.excluded.message=Data Category {0} is not excluded yet.
data.category.exclude.not.exist.message=Excluded Data Category {1} of Data Category {0} does not exist.
data.category.exclude.invalid.message=Excluded Data Category {1} is not a valid descendant of User Category {0} and is ignored.
data.category.not.exist.message=Data Category {0} referred in Rule {1} does not exist.
data.category.parent.not.exist.message=Parent Data Category {1} of Data Category {0} does not exist.

policy=Policy
policy.output=Policy: {0}
policy.id=Policy ID
policy.info=Policy Information
policy.rules=Policy Rules
policy.vocabulary.contains.error.message=Vocabulary "{0}" contains errors, please fix them first.
policy.opened.message=Policy "{0}" is already opened.
policy.save.success.message=Policy {0} is successfully save to "{0}".
policy.invalid.document.message="{0}" is not a valid policy document!
policy.parse.error.message=Policy "{0}" contains errors, see messages from output.
policy.invalid.vocabulary.document.message=Fail to parse Policy "{0}" since the referred Vocabulary contains errors, please fix them first.
policy.no.vocabulary.message=Please set the Vocabulary first.
policy.save.error.message=Policy {0} contains errors, please fix them before save.
policy.no.simplify.message=Rules in Policy {0} contain no redundant element.
policy.simplify.prompt.message=Rules in Policy {0} contain redundant elements, remove them?
policy.redundancy.message=Policy {0} contains redundant rules, see messages below.
policy.no.redundancy.message=Policy {0} contains no redundant rule.
policy.normal.inconsistency.message=Policy {0} contains normal inconsistent rules, see messages below.
policy.no.normal.inconsistency.message=Policy {0} contains no normal inconsistent rules.
policy.approximate.inconsistency.message=Policy {0} contains approximate inconsistent rules, see messages below.
policy.no.approximate.inconsistency.message=Policy {0} contains no approximate inconsistent rules.
policy.strong.inconsistency.message=Policy {0} contains strong inconsistent rules, see messages below.
policy.no.strong.inconsistency.message=Policy {0} contains no strong inconsistent rules.
policy.seed.strong.inconsistency.message=Policy {0} contains strong inconsistent rules w.r.t. seed rule {1}, see messages below.
policy.seed.no.strong.inconsistency.message=Policy {0} contains no strong inconsistent rules w.r.t. seed  rule {1}.
policy.enhanced.strong.inconsistency.message=Policy {0} contains enhanced strong inconsistent rules, see messages below.
policy.no.enhanced.strong.inconsistency.message=Policy {0} contains no enhanced strong inconsistent rules.
policy.seed.enhanced.strong.inconsistency.message=Policy {0} contains enhanced strong inconsistent rules w.r.t. seed rule {1}, see messages below.
policy.seed.no.enhanced.strong.inconsistency.message=Policy {0} contains no enhanced strong inconsistent rules w.r.t. seed rule {1}.

rule=Rule
rule.type=Rule Type
rule.id=Rule ID
rule.error.message=Rule contains errors, see messages below.
rule.id=Rule ID
rule.id.not.empty.message=Rule ID cannot be empty.
rule.id.unique.message=Rule {} already exists.
rule.user.ref.not.empty.message=User Category cannot be empty.
rule.data.ref.not.empty.message=Data Category cannot be empty.
rule.user.ref.unique.message=User Category {0} is already referred.
rule.data.ref.unique.message=Data Category {0} is already referred.
rule.data.association.not.overlap.message=Data Categories in Data Association must not overlap.
rule.desensitize.operation.unique.message=Desensitize Operation {0} is already included.
rule.desensitize.operation.not.exist.message=Desensitize Operation {0} is not included yet.
rule.restriction.not.empty.message=Rule must have at lest one Restriction.
rule.restriction.effective.message=Restriction {0} is ineffective, please add desensitize operations.
rule.restriction.dataref.not.exist.message=Desensitized Data Category {0} in Restriction #{1} of Rule {2} is not referred by the rule and is thus ignored.
rule.restriction.explicit.dataref.message=Desensitized Data Category must be explicitly specified in Data-Associated Rule {0} and is thus ignored.   
rule.restriction.one.forbid.message=Forbidden Rule {0} should contain no restrictions, and extra restrictions are ignored.
rule.restriction.unsupported.operation.message=Restriction #{1} of Rule {0} contains unsupported operations for some data categories, and unsupported operations are ignored.
rule.restriction.single.one.message=Non-Associated Rule {0} can only contain 1 Restriction, and extra restrictions are ignored.
rule.restriction.single.no.dataref.message=Desensitized Data Category should not be explicitly specified in Non-Associated Rule {0}, and invalid restrictions are ignored.
rule.restriction.single.one.desensitize.message=Only one Desensitization is allowed in Non-Associated Rule {0}, and invalid desensitizations are ignored.
rule.restriction.none=None
rule.no.simplify.message=Rule {0} contains no redundant element.
rule.simplify.prompt.message=Rule {0} contains redundant elements, remove them?
rule.user.ref.simplify.message=User Category {0} in Rule {1} is redundant and can be removed.
rule.data.ref.simplify.message=Data Category {0} in Rule {1} is redundant and can be removed.
rule.restriction.simplify.message=Restriction #{0} in Rule {1} is redundant and can be removed.
rule.redundancy.message=Rule {0} is redundant w.r.t. Rule {1}.
rule.normal.inconsistency.message=Rules {0} are normal inconsistent rules.
rule.approximate.inconsistency.message=Rules {0} are approximate inconsistent rules.
rule.strong.inconsistency.message=Rules {0} are strong inconsistent w.r.t. seed rule {1} .
rule.enhanced.strong.inconsistency.message=Rules {0} are enhanced strong inconsistent w.r.t. seed rule {1}.

metadata=Metadata
visualization=Visualization
scope.relation=Scope Relation

forbid=Forbid
restriction=Restriction
restrict=Restrict

desensitize=Desensitize
desensitize.operation=Desensitize Operation
desensitize.operation.empty.message=Name of Desensitize Operation cannot be empty.
desensitize.operation.unique.message=Desensitize Operation {0} already exists.

delete.user=Delete User
delete.user.message=Delete all children user categories together?

delete.data=Delete Data
delete.data.message=Delete all children data categories together?


output.message=Output: 
exclude=Exclude
action=Action
single=Single
association=Association
